
; ******** Source: large-edit.asm
     1                          ; large-edit.asm - Commodore 64 Large Type Editor
     2                          ; Copyright (c) 2025 by David Van Wagner ALL RIGHTS RESERVED
     3                          ; MIT LICENSE
     4                          ; github.com/davervw
     5                          ; www.davevw.com
     6                          
     7                          CHROUT = $ffd2
     8                          IRQVECT = $0314
     9                          
    10                          *=$c000
    11  c000 4c58c1                 jmp init
    12                          
    13                          newirq:
    14  c003 a5ff                   lda $ff
    15  c005 8da9c2                 sta saveff
    16  c008 a522                   lda $22
    17  c00a 8da3c2                 sta save22
    18  c00d a523                   lda $23
    19  c00f 8da4c2                 sta save23
    20  c012 a524                   lda $24
    21  c014 8da5c2                 sta save24
    22  c017 a525                   lda $25
    23  c019 8da6c2                 sta save25
    24  c01c a526                   lda $26
    25  c01e 8da7c2                 sta save26
    26  c021 a527                   lda $27
    27  c023 8da8c2                 sta save27
    28                          
    29  c026 a200                   ldx #0
    30  c028 86ff                   stx $ff
    31  c02a bd0004             -   lda $0400,x
    32  c02d dd20cf                 cmp $cc00 + 800,x
    33  c030 f005                   beq +
    34  c032 9d20cf                 sta $cc00 + 800,x
    35  c035 e6ff                   inc $ff
    36  c037 18                 +   clc
    37  c038 e8                     inx
    38  c039 e0c8                   cpx #200
    39  c03b 90ed                   bcc -
    40                          
    41  c03d a5ff                   lda $ff
    42  c03f d003                   bne +
    43  c041 4c32c1                 jmp ++
    44                          
    45  c044 a501               +   lda $01
    46  c046 8502                   sta $02
    47  c048 29f0                   and #$f0
    48  c04a 8501                   sta $01    
    49                          
    50  c04c a000                   ldy #0
    51  c04e 8422                   sty $22 ; row
    52  c050 8423                   sty $23 ; col
    53  c052 84fb                   sty $fb ; low byte source screen
    54  c054 a204                   ldx #4
    55  c056 86fc                   stx $fc ; high byte source screen
    56  c058 84fd                   sty $fd ; low byte dest screen
    57  c05a a2cc                   ldx #$cc ; high byte dest screen
    58  c05c 86fe                   stx $fe
    59  c05e b1fb               -   lda ($fb),y
    60  c060 d969c2                 cmp text_buffer,y
    61  c063 d003                   bne +
    62  c065 4cf9c0                 jmp skip
    63  c068 9969c2             +   sta text_buffer,y
    64  c06b a20e                   ldx #$e
    65  c06d 8627                   stx $27 ; will be high byte encoded screen codes after multiplication
    66  c06f 0a                     asl
    67  c070 2627                   rol $27
    68  c072 0a                     asl
    69  c073 2627                   rol $27
    70  c075 0a                     asl
    71  c076 2627                   rol $27
    72  c078 0a                     asl
    73  c079 2627                   rol $27
    74  c07b 8526                   sta $26 ; low byte encoded screen codes
    75                              
    76  c07d 84ff                   sty $ff
    77                          
    78  c07f a000                   ldy #0
    79  c081 b126                   lda ($26),y
    80  c083 91fd                   sta ($fd),y
    81                          
    82  c085 a001                   ldy #1
    83  c087 b126                   lda ($26),y
    84  c089 91fd                   sta ($fd),y
    85                          
    86  c08b a002                   ldy #2
    87  c08d b126                   lda ($26),y
    88  c08f 91fd                   sta ($fd),y
    89                          
    90  c091 a003                   ldy #3
    91  c093 b126                   lda ($26),y
    92  c095 91fd                   sta ($fd),y
    93                          
    94  c097 a004                   ldy #4
    95  c099 b126                   lda ($26),y
    96  c09b a028                   ldy #40
    97  c09d 91fd                   sta ($fd),y
    98                          
    99  c09f a005                   ldy #5
   100  c0a1 b126                   lda ($26),y
   101  c0a3 a029                   ldy #41
   102  c0a5 91fd                   sta ($fd),y
   103                          
   104  c0a7 a006                   ldy #6
   105  c0a9 b126                   lda ($26),y
   106  c0ab a02a                   ldy #42
   107  c0ad 91fd                   sta ($fd),y
   108                          
   109  c0af a007                   ldy #7
   110  c0b1 b126                   lda ($26),y
   111  c0b3 a02b                   ldy #43
   112  c0b5 91fd                   sta ($fd),y
   113                          
   114  c0b7 a008                   ldy #8
   115  c0b9 b126                   lda ($26),y
   116  c0bb a050                   ldy #80
   117  c0bd 91fd                   sta ($fd),y
   118                          
   119  c0bf a009                   ldy #9
   120  c0c1 b126                   lda ($26),y
   121  c0c3 a051                   ldy #81
   122  c0c5 91fd                   sta ($fd),y
   123                          
   124  c0c7 a00a                   ldy #10
   125  c0c9 b126                   lda ($26),y
   126  c0cb a052                   ldy #82
   127  c0cd 91fd                   sta ($fd),y
   128                          
   129  c0cf a00b                   ldy #11
   130  c0d1 b126                   lda ($26),y
   131  c0d3 a053                   ldy #83
   132  c0d5 91fd                   sta ($fd),y
   133                          
   134  c0d7 a00c                   ldy #12
   135  c0d9 b126                   lda ($26),y
   136  c0db a078                   ldy #120
   137  c0dd 91fd                   sta ($fd),y
   138                          
   139  c0df a00d                   ldy #13
   140  c0e1 b126                   lda ($26),y
   141  c0e3 a079                   ldy #121
   142  c0e5 91fd                   sta ($fd),y
   143                          
   144  c0e7 a00e                   ldy #14
   145  c0e9 b126                   lda ($26),y
   146  c0eb a07a                   ldy #122
   147  c0ed 91fd                   sta ($fd),y
   148                          
   149  c0ef a00f                   ldy #15
   150  c0f1 b126                   lda ($26),y
   151  c0f3 a07b                   ldy #123
   152  c0f5 91fd                   sta ($fd),y
   153                          
   154  c0f7 a4ff                   ldy $ff
   155                          
   156                          skip
   157  c0f9 c8                     iny
   158  c0fa 18                     clc
   159  c0fb a5fd                   lda $fd
   160  c0fd 6904                   adc #4
   161  c0ff 85fd                   sta $fd
   162  c101 9002                   bcc +
   163  c103 e6fe                   inc $fe
   164  c105 e623               +   inc $23
   165  c107 a523                   lda $23
   166  c109 c90a                   cmp #10
   167  c10b b003                   bcs +
   168  c10d 4c5ec0                 jmp -
   169  c110 a900               +   lda #0
   170  c112 8523                   sta $23
   171  c114 18                     clc
   172  c115 98                     tya
   173  c116 691e                   adc #30
   174  c118 a8                     tay
   175  c119 a5fd                   lda $fd
   176  c11b 6978                   adc #(160-40)
   177  c11d 85fd                   sta $fd
   178  c11f 9002                   bcc +
   179  c121 e6fe                   inc $fe
   180  c123 e622               +   inc $22
   181  c125 a522                   lda $22
   182  c127 c905                   cmp #5
   183  c129 b003                   bcs +
   184  c12b 4c5ec0                 jmp -
   185                          
   186                          restorebank
   187  c12e a502               +   lda $02
   188  c130 8501                   sta $01
   189                          
   190  c132 ada3c2             ++  lda save22
   191  c135 8522                   sta $22
   192  c137 ada4c2                 lda save23
   193  c13a 8523                   sta $23
   194  c13c ada5c2                 lda save24
   195  c13f 8524                   sta $24
   196  c141 ada6c2                 lda save25
   197  c144 8525                   sta $25
   198  c146 ada7c2                 lda save26
   199  c149 8526                   sta $26
   200  c14b ada8c2                 lda save27
   201  c14e 8527                   sta $27
   202  c150 ada9c2                 lda saveff
   203  c153 85ff                   sta $ff
   204                          
   205                          oldirq = *+1
   206  c155 4c0000                 jmp $0000
   207                          
   208                          init:
   209  c158 20afc1                 jsr copy_charrom
   210  c15b 206fc1                 jsr switch_charram
   211  c15e 207ac1                 jsr switch_screen_cc00
   212  c161 a9ba                   lda #<title
   213  c163 a2c2                   ldx #>title
   214  c165 20d3c1                 jsr strout
   215  c168 20e4c1                 jsr encode_chars
   216  c16b 2093c1                 jsr swapirq
   217  c16e 60                     rts
   218                          
   219                          switch_charram:
   220  c16f ad18d0                 lda $d018
   221  c172 2902                   and #$02
   222  c174 0934                   ora #$34
   223  c176 8d18d0                 sta $d018
   224  c179 60                     rts
   225                          
   226                          switch_screen_cc00:
   227  c17a a200                   ldx #0
   228  c17c a920                   lda #$20
   229  c17e 9d00cc             -   sta $cc00, x
   230  c181 9d00cd                 sta $cd00, x
   231  c184 9d00ce                 sta $ce00, x
   232  c187 9d00cf                 sta $cf00, x
   233  c18a e8                     inx
   234  c18b d0f1                   bne -
   235  c18d a904                   lda #$04
   236  c18f 8d00dd                 sta $dd00
   237  c192 60                     rts
   238                          
   239                          swapirq:
   240  c193 a903                   lda #<newirq
   241  c195 a2c0                   ldx #>newirq
   242  c197 ec1503                 cpx IRQVECT+1
   243  c19a f012                   beq +
   244  c19c ac1403                 ldy IRQVECT
   245  c19f 8c56c1                 sty oldirq
   246  c1a2 ac1503                 ldy IRQVECT+1
   247  c1a5 8c57c1                 sty oldirq+1
   248  c1a8 8d1403                 sta IRQVECT
   249  c1ab 8e1503                 stx IRQVECT+1 
   250  c1ae 60                 +   rts
   251                          
   252                          ; copy ROM D000-DFFF to RAM D000-DFFF
   253                          copy_charrom:
   254  c1af 78                     sei
   255  c1b0 a000                   ldy #0
   256  c1b2 84fb                   sty $fb
   257  c1b4 a9d0                   lda #$d0
   258  c1b6 85fc                   sta $fc
   259  c1b8 a501                   lda $01
   260  c1ba aa                     tax
   261  c1bb 29fb                   and #$fb
   262  c1bd 8501                   sta $01
   263  c1bf b1fb               -   lda ($fb),y
   264  c1c1 91fb                   sta ($fb),y
   265  c1c3 c8                     iny
   266  c1c4 d0f9                   bne -
   267  c1c6 e6fc                   inc $fc
   268  c1c8 a5fc                   lda $fc
   269  c1ca c9e0                   cmp #$e0
   270  c1cc 90f1                   bcc -
   271  c1ce 8a                     txa
   272  c1cf 8501                   sta $01
   273  c1d1 58                     cli
   274  c1d2 60                     rts
   275                          
   276                          strout:
   277  c1d3 85fb                   sta $fb
   278  c1d5 86fc                   stx $fc
   279  c1d7 a000                   ldy #0
   280  c1d9 b1fb               -   lda ($fb),y
   281  c1db f006                   beq +
   282  c1dd 20d2ff                 jsr CHROUT
   283  c1e0 c8                     iny
   284  c1e1 d0f6                   bne -
   285  c1e3 60                 +   rts
   286                          
   287                          encode_chars: ; encode each 8x8 pixel character (8 bytes bitmap) into local buffer (4x4 = 16 byte screencodes)
   288  c1e4 a900                   lda #$00
   289  c1e6 a2d0                   ldx #$d0
   290  c1e8 85fb                   sta $fb
   291  c1ea 86fc                   stx $fc
   292  c1ec a900                   lda #0
   293  c1ee a2e0                   ldx #$e0
   294  c1f0 8524                   sta $24
   295  c1f2 8625                   stx $25
   296  c1f4 a99b               -   lda #<bitmap_buffer
   297  c1f6 a2c2                   ldx #>bitmap_buffer
   298  c1f8 85fd                   sta $fd
   299  c1fa 86fe                   stx $fe
   300  c1fc 2014c2                 jsr copy_char
   301  c1ff 202cc2                 jsr encode_char
   302  c202 18                     clc
   303  c203 a5fb                   lda $fb
   304  c205 6908                   adc #8
   305  c207 85fb                   sta $fb
   306  c209 9002                   bcc +
   307  c20b e6fc                   inc $fc
   308  c20d a5fc               +   lda $fc
   309  c20f c9e0                   cmp #$e0
   310  c211 90e1                   bcc -
   311  c213 60                     rts
   312                          
   313                          copy_char: ; $fb/fc source (chargen ROM), to $fd/fe destination (normal RAM)
   314  c214 78                     sei
   315  c215 a501                   lda $01
   316  c217 aa                     tax
   317  c218 29fb                   and #$fb
   318  c21a 8501                   sta $01
   319  c21c a007                   ldy #7
   320  c21e b1fb               -   lda ($fb),y
   321  c220 91fd                   sta ($fd),y
   322  c222 88                     dey
   323  c223 10f9                   bpl -
   324  c225 8a                     txa
   325  c226 0907                   ora #7
   326  c228 8501                   sta $01
   327  c22a 58                     cli
   328  c22b 60                     rts    
   329                          
   330                          encode_char: ; given chargen bitmaps at bitmap_buffer+0 to +7, output 16 screen codes representing charcter to pointer $24/$25, pointer += 16, uses $22/$23/$ff
   331  c22c a200                   ldx #0
   332  c22e a904                   lda #4
   333  c230 8522                   sta $22 ; #rows countdown
   334  c232 a904               --  lda #4
   335  c234 8523                   sta $23 ; #columns countdown
   336  c236 bd9bc2             -   lda bitmap_buffer, x
   337  c239 0a                     asl
   338  c23a 66ff                   ror $ff
   339  c23c 0a                     asl
   340  c23d 66ff                   ror $ff
   341  c23f 9d9bc2                 sta bitmap_buffer, x
   342  c242 e8                     inx
   343  c243 8a                     txa
   344  c244 2901                   and #1
   345  c246 d0ee                   bne -
   346  c248 a5ff                   lda $ff ; bits from two bytes 01------/23------ are now in order 3210----
   347  c24a 4a                     lsr
   348  c24b 4a                     lsr
   349  c24c 4a                     lsr
   350  c24d 4a                     lsr ; bits now are ----3210 with high bits clear
   351  c24e a8                     tay
   352  c24f b9aac2                 lda lores_codes, y
   353  c252 a000                   ldy #0
   354  c254 9124                   sta ($24), y
   355  c256 e624                   inc $24
   356  c258 d002                   bne +
   357  c25a e625                   inc $25
   358  c25c ca                 +   dex
   359  c25d ca                     dex
   360  c25e c623                   dec $23
   361  c260 d0d4                   bne -
   362  c262 e8                     inx
   363  c263 e8                     inx
   364  c264 c622                   dec $22
   365  c266 d0ca                   bne --
   366  c268 60                     rts
   367                          
   368                          text_buffer:
   369  c269 2020202020202020...    !byte 32,32,32,32,32,32,32,32,32,32
   370  c273 2020202020202020...    !byte 32,32,32,32,32,32,32,32,32,32
   371  c27d 2020202020202020...    !byte 32,32,32,32,32,32,32,32,32,32
   372  c287 2020202020202020...    !byte 32,32,32,32,32,32,32,32,32,32
   373  c291 2020202020202020...    !byte 32,32,32,32,32,32,32,32,32,32
   374                          
   375                          bitmap_buffer:
   376  c29b 00000000               !byte 0,0,0,0
   377  c29f 00000000               !byte 0,0,0,0
   378                          
   379  c2a3 00                 save22: !byte 0
   380  c2a4 00                 save23: !byte 0
   381  c2a5 00                 save24: !byte 0
   382  c2a6 00                 save25: !byte 0
   383  c2a7 00                 save26: !byte 0
   384  c2a8 00                 save27: !byte 0
   385  c2a9 00                 saveff: !byte 0
   386                          
   387                          ; 16 commodore graphics screen codes that make lo-res 2x2 pixels per character bits in NW,NE,SW,SE order low to high 
   388                          lores_codes:
   389  c2aa 60                         !byte $60 ; 00/00
   390  c2ab 7e                         !byte $7e ; 10/00 NW
   391  c2ac 7c                         !byte $7c ; 01/00 NE
   392  c2ad e2                         !byte $e2 ; 11/00
   393  c2ae 7b                         !byte $7b ; 00/10 SW
   394  c2af 61                         !byte $61 ; 10/10
   395  c2b0 ff                         !byte $ff ; 01/10
   396  c2b1 ec                         !byte $ec ; 11/10
   397  c2b2 6c                         !byte $6c ; 00/01 SE
   398  c2b3 7f                         !byte $7f ; 10/01
   399  c2b4 e1                         !byte $e1 ; 01/01
   400  c2b5 fb                         !byte $fb ; 11/01
   401  c2b6 62                         !byte $62 ; 00/11
   402  c2b7 fc                         !byte $fc ; 10/11
   403  c2b8 fe                         !byte $fe ; 01/11
   404  c2b9 e0                         !byte $e0 ; 11/11
   405                          
   406                          title: 
   407  c2ba 9312                   !byte 147,18
   408                              ;               1         2         3         4
   409                              ;      1234567890123456789012345678901234567890
   410  c2bc 4c41524745205459...    !text "LARGE TYPE EDITOR                       ",146
   411  c2e5 2843292032303235...    !text "(C) 2025 DAVID R. VAN WAGNER",13
   412  c302 0d                     !text 13
   413  c303 4749544855422e43...    !text "GITHUB.COM/DAVERVW",13
   414  c316 4441564556572e43...    !text "DAVEVW.COM",13
   415  c321 00                     !byte 0
   416                          
   417                          finish:
